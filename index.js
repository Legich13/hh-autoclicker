(async () => {
  // –£–±–∏—Ä–∞–µ–º href, —á—Ç–æ–±—ã —Å—Å—ã–ª–∫–∏ ‚Äú–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è‚Äù –Ω–µ –≤–µ–ª–∏ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  const responseButtons = document.querySelectorAll('[data-qa="vacancy-serp__vacancy_response"]');
  responseButtons.forEach(btn => btn.removeAttribute('href'));
  
  // –ü—Ä–æ—Å—Ç–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏
  const delay = ms => new Promise(res => setTimeout(res, ms));

  // –≠–º—É–ª—è—Ü–∏—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∏–∫–∞
  function simulateClick(el, opts = {}) {
    const base = { bubbles: true, cancelable: true, view: window, ...opts };
    ['mouseover','pointerdown','mousedown','pointerup','mouseup','click']
      .forEach(type => el.dispatchEvent(new MouseEvent(type, base)));
  }

  // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∫–ª–∏–∫–∞
  function waitForResponseModal() {
    return new Promise(resolve => {
      const obs = new MutationObserver(() => {
        const modal = document.querySelector('.magritte-modal-overlay___lK22l_7-1-1');
        if (modal) {
          obs.disconnect();
          resolve('response');
        }
      });
      obs.observe(document.body, { childList: true, subtree: true });
    });
  }

  // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–µ—Ä–µ–µ–∑–¥–µ
  function waitForRelocationModal() {
    return new Promise(resolve => {
      const obs = new MutationObserver(() => {
        const warn = document.querySelector('.magritte-overlay___hMlKJ_2-0-4');
        if (warn) {
          obs.disconnect();
          resolve('relocation');
        }
      });
      obs.observe(document.body, { childList: true, subtree: true });
    });
  }

  // –ñ–¥—ë–º –∑–∞–∫—Ä—ã—Ç–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (–ø–æ —Å—Ç–∏–ª—é/—É–¥–∞–ª–µ–Ω–∏—é)
  function waitForResponseModalClose() {
    return new Promise(resolve => {
      const iv = setInterval(() => {
        const modal = document.querySelector('.magritte-modal-overlay___lK22l_7-1-1');
        if (!modal || getComputedStyle(modal).display === 'none' || modal.offsetParent === null) {
          clearInterval(iv);
          resolve();
        }
      }, 300);
    });
  }

  // –ñ–¥—ë–º –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–µ—Ä–µ–µ–∑–¥–µ
  function waitForRelocationModalClose() {
    return new Promise(resolve => {
      const iv = setInterval(() => {
        const warn = document.querySelector('.magritte-overlay___hMlKJ_2-0-4');
        if (!warn || getComputedStyle(warn).display === 'none' || warn.offsetParent === null) {
          clearInterval(iv);
          resolve();
        }
      }, 300);
    });
  }

  // –ó–∞–∫—Ä—ã—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫–ª–∏–∫–∞, –∫–ª–∏–∫–Ω—É–≤ –≤ –ø—É—Å—Ç–æ–º —É–≥–ª—É –ø–æ–¥–ª–æ–∂–∫–∏
  function closeResponseModal() {
    const overlay = document.querySelector('.magritte-modal-overlay___lK22l_7-1-1');
    if (overlay) {
      const { left, top } = overlay.getBoundingClientRect();
      simulateClick(overlay, { clientX: left + 10, clientY: top + 10 });
    }
  }

  // –ù–∞–∂–∞—Ç—å ‚Äú–û—Ç–º–µ–Ω–∏—Ç—å‚Äù –≤ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏ –æ –ø–µ—Ä–µ–µ–∑–¥–µ
  function cancelRelocation() {
    const btn = document.querySelector('[data-qa="relocation-warning-abort"]');
    if (btn) {
      simulateClick(btn);
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
  async function handleVacancy(button) {
    console.log('‚ñ∂Ô∏è –û—Ç–∫–ª–∏–∫ ‚Ññ', index + 1);
    simulateClick(button);

    // –ñ–¥—ë–º –ª–∏–±–æ –º–æ–¥–∞–ª–∫—É –æ—Ç–∫–ª–∏–∫–∞, –ª–∏–±–æ –ø–µ—Ä–µ–µ–∑–¥, –ª–∏–±–æ —Ç–∞–π–º–∞—É—Ç
    const which = await Promise.race([
      waitForResponseModal(),
      waitForRelocationModal(),
      delay(2000).then(() => 'timeout')
    ]);

    if (which === 'relocation') {
      console.log('‚ö†Ô∏è –ü–æ—è–≤–∏–ª–æ—Å—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–µ–∑–¥–µ ‚Äî –æ—Ç–º–µ–Ω—è–µ–º');
      cancelRelocation();
      await waitForRelocationModalClose();
      console.log('‚Ü©Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏');
      return;
    }

    if (which === 'response') {
      console.log('‚úÖ –ú–æ–¥–∞–ª–∫–∞ –æ—Ç–∫–ª–∏–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞');
      await delay(800);
      closeResponseModal();
      await waitForResponseModalClose();
      console.log('‚úÖ –ú–æ–¥–∞–ª–∫–∞ –æ—Ç–∫–ª–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞');
      return;
    }

    console.log('‚è±Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –æ—Ç–∫—Ä—ã–ª–æ—Å—å ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
  let index = 0;
  while (index < responseButtons.length) {
    await handleVacancy(responseButtons[index]);
    index++;
    await delay(1000);
  }

  console.log('üéâ –ì–æ—Ç–æ–≤–æ ‚Äî –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤!');
})();
